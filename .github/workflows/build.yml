name: Build

on: [push]

env:
  BUILD_TYPE: Release
  BUILD_CONFIG: RelWithDebInfo

jobs:
###############################################################################
# Build Web Assembly
###############################################################################
  build_wasm:
    runs-on: ubuntu-20.04
    # if: ${{false}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

###############################################################################
# Create Build Environment
###############################################################################
    - name: Download and install emscripten
      shell: bash
      run: |
        echo tradingsecret-beam-wasm${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}
        exit
        git clone https://github.com/emscripten-core/emsdk.git ${{runner.workspace}}/emsdk
        cd ${{runner.workspace}}/emsdk
        git pull
        ./emsdk install latest
        ./emsdk activate latest

    - name: Download boost
      shell: bash
      run: |
        git clone --depth=1 https://github.com/BeamMW/boost_prebuild_ubuntu-20.04.git ${{runner.workspace}}/boost_prebuild
        echo "BOOST_INCLUDEDIR=${{runner.workspace}}/boost_prebuild/include" >> $GITHUB_ENV
        echo "BOOST_LIBRARYDIR=${{runner.workspace}}/boost_prebuild/lib/" >> $GITHUB_ENV
    
    - name: Download openssl
      shell: bash
      run: |
        git clone --depth=1 https://github.com/BeamMW/openssl-wasm.git ${{runner.workspace}}/openssl-wasm

###############################################################################
# Configure CMake && Build
###############################################################################
    - name: Configure CMake && Build
      run: |
        source ${{runner.workspace}}/emsdk/emsdk_env.sh
        cmake . -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE=${{runner.workspace}}/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DBoost_DEBUG=On -DBEAM_TESTS_ENABLED=Off -DBEAM_WALLET_CLIENT_LIBRARY=On -DBEAM_ATOMIC_SWAP_SUPPORT=Off -DBEAM_LASER_SUPPORT=Off -DBEAM_USE_STATIC=On -DBOOST_ROOT=${{runner.workspace}}/boost_prebuild -DCMAKE_FIND_ROOT_PATH:FILEPATH="${{runner.workspace}}/boost_prebuild;${{runner.workspace}}/openssl-wasm" -DOPENSSL_ROOT_DIR=${{runner.workspace}}/openssl-wasm -B${{runner.workspace}}/build_wasm
        emmake make -j$(nproc) -C ${{runner.workspace}}/build_wasm

    - name: Save version info
      run: |
        echo "BEAM_VERSION=$(cat beam_version.gen)" >> $GITHUB_ENV
        echo "BEAM_TARGET_SUFFIX=-masternet" >> $GITHUB_ENV
        rm beam_version.gen

###############################################################################
# Upload
###############################################################################
    - uses: actions/upload-artifact@v2
      with:
        name: tradingsecret-beam-wasm${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}
        path: |
          ${{runner.workspace}}/build_wasm/wasmclient/wasm-client.*
        if-no-files-found: error

    - uses: actions/setup-node@v2
      with:
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{runner.workspace}}/build_wasm/wasmclient/
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
